{
  "_args": [
    [
      "csrf-tokens@https://registry.npmjs.org/csrf-tokens/-/csrf-tokens-1.0.4.tgz",
      "/Users/ravikumar/projects/angular-demo/node_modules/grunt-contrib-connect/node_modules/connect/node_modules/csurf"
    ]
  ],
  "_from": "https://registry.npmjs.org/csrf-tokens/-/csrf-tokens-1.0.4.tgz",
  "_id": "csrf-tokens@1.0.4",
  "_inCache": true,
  "_location": "/grunt-contrib-connect/connect/csurf/csrf-tokens",
  "_phantomChildren": {},
  "_requested": {
    "name": "csrf-tokens",
    "raw": "csrf-tokens@https://registry.npmjs.org/csrf-tokens/-/csrf-tokens-1.0.4.tgz",
    "rawSpec": "https://registry.npmjs.org/csrf-tokens/-/csrf-tokens-1.0.4.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/csrf-tokens/-/csrf-tokens-1.0.4.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/grunt-contrib-connect/connect/csurf"
  ],
  "_resolved": "https://registry.npmjs.org/csrf-tokens/-/csrf-tokens-1.0.4.tgz",
  "_shasum": "49672568b2703348644eacaf61cdbdc054ba56f2",
  "_shrinkwrap": null,
  "_spec": "csrf-tokens@https://registry.npmjs.org/csrf-tokens/-/csrf-tokens-1.0.4.tgz",
  "_where": "/Users/ravikumar/projects/angular-demo/node_modules/grunt-contrib-connect/node_modules/connect/node_modules/csurf",
  "author": {
    "email": "me@jongleberry.com",
    "name": "Jonathan Ong",
    "url": "http://jongleberry.com"
  },
  "bugs": {
    "url": "https://github.com/expressjs/csrf-tokens/issues"
  },
  "dependencies": {
    "rndm": "1",
    "scmp": "~0.0.3",
    "uid2": "~0.0.2"
  },
  "description": "primary logic behind csrf tokens",
  "devDependencies": {
    "mocha": "1"
  },
  "homepage": "https://github.com/expressjs/csrf-tokens#readme",
  "license": "MIT",
  "name": "csrf-tokens",
  "optionalDependencies": {},
  "readme": "\n# CSRF Tokens\n\nLogic behind CSRF token creation and verification.\nRead [Understanding-CSRF](http://www.jongleberry.com/understanding-csrf.html) for more information on CSRF.\nUse this module to create custom CSRF middleware and what not.\n\n## API\n\n```js\nvar tokens = require('csrf-tokens')(options)\n\nvar secret = tokens.secret()\nvar token = tokens.create(secret)\nvar valid = tokens.verify(secret, token)\n```\n\nOptions:\n\n- `secretLength: 24` - the byte length of the secret key\n- `saltLength: 8` - the string length of the salt\n- `tokensize: (secret, salt) => token` - a custom token creation function\n\n### var secret = tokens.secret()\n\nCreate a new `secret` of length `secretLength`.\nYou don't have to use this.\n\n### var token = tokens.token(secret)\n\nCreate a CSRF token based on a `secret`.\nThis is the token you pass to clients.\n\n### var valid = tokens.verify(secret, token)\n\nCheck whether a CSRF token is valid based on a `secret`.\nIf it's not valid, you should probably throw a `403` error.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/expressjs/csrf-tokens.git"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "version": "1.0.4"
}
