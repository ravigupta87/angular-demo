{
  "_args": [
    [
      "browserstacktunnel-wrapper@https://registry.npmjs.org/browserstacktunnel-wrapper/-/browserstacktunnel-wrapper-1.3.1.tgz",
      "/Users/ravikumar/projects/angular-demo"
    ]
  ],
  "_from": "https://registry.npmjs.org/browserstacktunnel-wrapper/-/browserstacktunnel-wrapper-1.3.1.tgz",
  "_id": "browserstacktunnel-wrapper@1.3.1",
  "_inCache": true,
  "_location": "/browserstacktunnel-wrapper",
  "_phantomChildren": {},
  "_requested": {
    "name": "browserstacktunnel-wrapper",
    "raw": "browserstacktunnel-wrapper@https://registry.npmjs.org/browserstacktunnel-wrapper/-/browserstacktunnel-wrapper-1.3.1.tgz",
    "rawSpec": "https://registry.npmjs.org/browserstacktunnel-wrapper/-/browserstacktunnel-wrapper-1.3.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/browserstacktunnel-wrapper/-/browserstacktunnel-wrapper-1.3.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/",
    "/karma-browserstack-launcher"
  ],
  "_resolved": "https://registry.npmjs.org/browserstacktunnel-wrapper/-/browserstacktunnel-wrapper-1.3.1.tgz",
  "_shasum": "60dd5fff86c3ee762120bd48bea88617049ad9c0",
  "_shrinkwrap": null,
  "_spec": "browserstacktunnel-wrapper@https://registry.npmjs.org/browserstacktunnel-wrapper/-/browserstacktunnel-wrapper-1.3.1.tgz",
  "_where": "/Users/ravikumar/projects/angular-demo",
  "author": {
    "email": "pghalliday@gmail.com",
    "name": "Peter Halliday",
    "url": "http://stuffpetedoes.blogspot.nl/"
  },
  "bugs": {
    "url": "https://github.com/pghalliday/node-BrowserStackTunnel/issues"
  },
  "dependencies": {
    "unzip": "~0.1.9"
  },
  "description": "A Node.js wrapper for the BrowserStack java tunnel client ",
  "devDependencies": {
    "expect.js": "~0.2.0",
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.9",
    "grunt-contrib-jshint": "~0.6.2",
    "grunt-contrib-watch": "~0.5.1",
    "grunt-mocha-test": "~0.6.3",
    "mocks": "0.0.15",
    "sinon": "~1.7.3"
  },
  "engines": {
    "node": ">= 0.10.20"
  },
  "homepage": "https://github.com/pghalliday/node-BrowserStackTunnel.git",
  "keywords": [
    "BrowserStack",
    "BrowserStackTunnel",
    "child_process",
    "spawn"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/pghalliday/node-BrowserStackTunnel/blob/master/LICENSE-MIT"
    }
  ],
  "main": "src/BrowserStackTunnel.js",
  "name": "browserstacktunnel-wrapper",
  "optionalDependencies": {},
  "readme": "node-BrowserStackTunnel\n=======================\n\n[![Build Status](https://travis-ci.org/pghalliday/node-BrowserStackTunnel.png)](https://travis-ci.org/pghalliday/node-BrowserStackTunnel)\n[![Dependency Status](https://gemnasium.com/pghalliday/node-BrowserStackTunnel.png)](https://gemnasium.com/pghalliday/node-BrowserStackTunnel)\n\nA Node.js wrapper for the BrowserStack tunnel client. On first run this will download the appropriate binary for your platform from BrowserStack. On Windows this will be a Jar file and you will need to have Java already installed.\n\nhttp://www.browserstack.com/\n\n## Installation\n\n```\nnpm install browserstacktunnel-wrapper\n```\n\n## API\n\n```javascript\nvar BrowserStackTunnel = require('browserstacktunnel-wrapper');\n\nvar browserStackTunnel = new BrowserStackTunnel({\n  key: YOUR_KEY,\n  hosts: [{\n    name: 'localhost',\n    port: 8080,\n    sslFlag: 0\n  }],\n  osxBin: 'your_bin_dir', // optionally override the default bin directory for the OSX binary\n  linux32Bin: 'your_bin_dir', // optionally override the default bin directory for the Linux 32 bit binary\n  linux64Bin: 'your_bin_dir', // optionally override the default bin directory for the Linux 64 bit binary\n  win32Bin: 'your_bin_dir', // optionally override the default bin directory for the win32 binary\n  tunnelIdentifier: 'my_tunnel', // optionally set the -tunnelIdentifier option\n  skipCheck: true, // optionally set the -skipCheck option\n  v: true, // optionally set the -v (verbose) option\n  proxyUser: PROXY_USER, // optionally set the -proxyUser option\n  proxyPass: PROXY_PASS, // optionally set the -proxyPass option\n  proxyPort: PROXY_PORT, // optionally set the -proxyPort option\n  proxyHost: PROXY_HOST, // optionally set the -proxyHost option\n  force: false // optionally set the -force option\n});\n\nbrowserStackTunnel.start(function(error) {\n  if (error) {\n    console.log(error);\n  } else {\n    // tunnel has started\n    \n    browserStackTunnel.stop(function(error) {\n      if (error) {\n        console.log(error);\n      } else {\n        // tunnel has stopped\n      }\n    });\n  }\n});\n```\n\n## Roadmap\n\n- Nothing yet\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using `npm test`.\n\n## License\nCopyright &copy; 2014 Peter Halliday  \nLicensed under the MIT license.\n\n[![Donate Bitcoins](https://coinbase.com/assets/buttons/donation_large-6ec72b1a9eec516944e50a22aca7db35.png)](https://coinbase.com/checkouts/9d121c0321590556b32241bbe7960362)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/pghalliday/node-BrowserStackTunnel.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "1.3.1"
}
